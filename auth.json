{
  "openapi": "3.0.1",
  "info": {
    "title": "Goose-Track API",
    "version": "1.0.0"
  },
  "basePath": "/api",
  "servers": [
    { "url": "https://goose-track-rest-api.onrender.com" },
    { "url": "https://localhost:3001" }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Operations related to authenticate"
    }
  ],
  "consumes": ["application/json", "mulripart/form-data"],
  "produces": ["application/json"],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "New user registration",
        "produces": ["application/json"],
        "requestBody": {
          "description": "The request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user is registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login of an existing user",
        "produces": ["application/json"],
        "requestBody": {
          "description": "The request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registered user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "The JWT access token"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The email or password is incorrect"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "security": [{ "Bearer": [] }],
        "produces": ["application/json"],
        "responses": {
          "204": {
            "description": "Successful user logout"
          },
          "401": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/auth/": {
      "put": {
        "tags": ["Auth"],
        "summary": "Updating user information",
        "security": [{ "Bearer": [] }],
        "produces": ["application/json"],
        "requestBody": {
          "description": "The body of the user's data change request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/UpdatedUser"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Getting a valid user",
        "security": [{ "Bearer": [] }],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Validated user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUser"
                }
              }
            }
          },
          "401": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/auth/avatar": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Changing the user's avatar",
        "requestBody": {
          "description": "The body of the user's avatar change request",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [{ "Bearer": [] }],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User avatar updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatedUserAvatar"
                }
              }
            }
          },
          "400": {
            "description": "The string parameters are invalid"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterUser": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Elesh Norn"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "eleshnorn@phyrexia.com"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "1234abc"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Elesh Norn"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "eleshnorn@phyrexia.com"
          }
        }
      },
      "LoginUser": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "example": "eleshnorn@phyrexia.com"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "1234abc"
          }
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "birthday": {
            "type": "Date",
            "description": "User's birthday",
            "example": "1208-03-10",
            "default": ""
          },
          "phone": {
            "type": "string",
            "description": "User phone number",
            "example": "001-7710",
            "default": ""
          },
          "skype": {
            "type": "string",
            "description": "Username in Skype",
            "example": "Sheoldred",
            "default": ""
          }
        }
      },
      "UpdatedUser": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User picture",
            "default": ""
          },
          "_id": {
            "type": "string",
            "description": "Unique user ID",
            "example": "64497f45555522a6cae4e577"
          },
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Sheoldred"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "1234abc"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "sheoldred@phyrexia.com"
          },
          "createdAt": {
            "type": "Date",
            "description": "User account creation date",
            "example": "2023-04-26T19:45:14.425Z"
          },
          "updatedAt": {
            "type": "Date",
            "description": "The date of the last update of the user's account",
            "example": "2023-04-29T08:19:54.761Z"
          },
          "token": {
            "type": "string",
            "description": "The JWT access token"
          },
          "birthday": {
            "type": "Date",
            "description": "User's birthday",
            "example": "1208-04-21T00:00:00.000Z",
            "default": ""
          },
          "phone": {
            "type": "string",
            "description": "User phone number",
            "example": "001-7710",
            "default": ""
          },
          "skype": {
            "type": "string",
            "description": "Username in Skype",
            "example": "Sheoldred",
            "default": ""
          }
        }
      },
      "CurrentUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Sorin Markov"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "sorinmarkov@innistrad.com"
          },
          "birthday": {
            "type": "Date",
            "description": "User's birthday",
            "example": "1611-02-10T00:00:00.000+00:00",
            "default": ""
          },
          "phone": {
            "type": "string",
            "description": "User phone number",
            "example": "555-0210",
            "default": ""
          },
          "skype": {
            "type": "string",
            "description": "Username in Skype",
            "example": "Sorin Markov",
            "default": ""
          }
        }
      },
      "UpdateUserAvatar": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique user ID",
            "example": "64497f45555522a6cae4e577"
          },
          "avatarURL": {
            "type": "string",
            "description": "User picture",
            "default": ""
          }
        }
      },
      "UpdatedUserAvatar": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User picture",
            "default": ""
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}