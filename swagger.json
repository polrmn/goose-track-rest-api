{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Goose Track",
    "description": "API for Goose Track application"
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "consumes": ["application/json", "mulripart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://goose-track-rest-api.onrender.com" },
    { "url": "https://localhost:3001" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Tasks",
      "description": "Tasks endpoints"
    },
    {
      "name": "Reviews",
      "description": "Reviews endpoints"
    }
  ],
  "paths": {
    "/api/tasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Retrieve a list of tasks",
        "security": [{ "Bearer": [] }],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/Task"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "summary": "Add new task",
        "security": [{ "Bearer": [] }],
        "produces": ["application/json"],
        "requestBody": {
          "description": "Task object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/Task"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/Task"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid or expired token"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/tasks/{id}": {
      "get": {
        "tags": ["Tasks"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "The ID of the task to retrieve"
          }
        ],
        "summary": "Retrieve a single task",
        "security": [{ "Bearer": [] }],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/Task"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete a task by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of task to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Task deleted successfully"
          },
          "404": {
            "description": "Task not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": ["Tasks"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "ID of the task to update"
          }
        ],
        "summary": "Update an existing task",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Task object that needs to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/Task"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully"
          },
          "400": {
            "description": "Invalid ID supplied or invalid request body"
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/tasks/{id}/status": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Update the status of a task",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "ID of the task to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["pending", "in progress", "completed"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task status updated successfully"
          },
          "400": {
            "description": "Invalid request body"
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/api/tasks/{id}/priority": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Update priority of a task",
        "description": "",
        "operationId": "updateTaskPriority",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of task to update",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Updated priority of task",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "priority": {
                    "type": "string",
                    "description": "New priority of the task"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task priority updated"
          },
          "404": {
            "description": "Task not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/reviews": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get all reviews",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/Review"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "Task": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the task",
          "example": "Buy groceries",
          "required": true
        },
        "status": {
          "type": "string",
          "description": "The status of the task",
          "example": "toDo",
          "enum": ["toDo", "inProgress", "done"],
          "default": "toDo"
        },
        "priority": {
          "type": "string",
          "description": "The priority of the task",
          "example": "low",
          "enum": ["low", "medium", "high"],
          "default": "low"
        },
        "date": {
          "type": "object",
          "description": "The start and end date of the task",
          "properties": {
            "start": {
              "type": "string",
              "format": "date-time",
              "description": "The start date of the task",
              "example": "2023-04-26T00:00:00Z",
              "required": true
            },
            "end": {
              "type": "string",
              "format": "date-time",
              "description": "The end date of the task",
              "example": "2023-04-27T00:00:00Z",
              "required": true
            }
          }
        },
        "owner": {
          "type": "string",
          "description": "The ID of the user who owns the task",
          "example": "6166c9e6f50fb55161d82eb2"
        }
      }
    },
    "Review": {
      "type":"object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the reviewer",
          "example": "User Name"
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
